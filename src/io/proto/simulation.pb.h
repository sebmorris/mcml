// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_simulation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_simulation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_simulation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_simulation_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_simulation_2eproto;
namespace simulation {
class ParameterSimulation;
struct ParameterSimulationDefaultTypeInternal;
extern ParameterSimulationDefaultTypeInternal _ParameterSimulation_default_instance_;
class ParameterSimulation_Layer;
struct ParameterSimulation_LayerDefaultTypeInternal;
extern ParameterSimulation_LayerDefaultTypeInternal _ParameterSimulation_Layer_default_instance_;
class Simulation;
struct SimulationDefaultTypeInternal;
extern SimulationDefaultTypeInternal _Simulation_default_instance_;
class Simulation_SimulationDetails;
struct Simulation_SimulationDetailsDefaultTypeInternal;
extern Simulation_SimulationDetailsDefaultTypeInternal _Simulation_SimulationDetails_default_instance_;
class Simulation_SimulationDetails_Layer;
struct Simulation_SimulationDetails_LayerDefaultTypeInternal;
extern Simulation_SimulationDetails_LayerDefaultTypeInternal _Simulation_SimulationDetails_Layer_default_instance_;
class Simulation_SimulationDetails_Range;
struct Simulation_SimulationDetails_RangeDefaultTypeInternal;
extern Simulation_SimulationDetails_RangeDefaultTypeInternal _Simulation_SimulationDetails_Range_default_instance_;
}  // namespace simulation
PROTOBUF_NAMESPACE_OPEN
template<> ::simulation::ParameterSimulation* Arena::CreateMaybeMessage<::simulation::ParameterSimulation>(Arena*);
template<> ::simulation::ParameterSimulation_Layer* Arena::CreateMaybeMessage<::simulation::ParameterSimulation_Layer>(Arena*);
template<> ::simulation::Simulation* Arena::CreateMaybeMessage<::simulation::Simulation>(Arena*);
template<> ::simulation::Simulation_SimulationDetails* Arena::CreateMaybeMessage<::simulation::Simulation_SimulationDetails>(Arena*);
template<> ::simulation::Simulation_SimulationDetails_Layer* Arena::CreateMaybeMessage<::simulation::Simulation_SimulationDetails_Layer>(Arena*);
template<> ::simulation::Simulation_SimulationDetails_Range* Arena::CreateMaybeMessage<::simulation::Simulation_SimulationDetails_Range>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace simulation {

// ===================================================================

class Simulation_SimulationDetails_Range final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.Simulation.SimulationDetails.Range) */ {
 public:
  inline Simulation_SimulationDetails_Range() : Simulation_SimulationDetails_Range(nullptr) {}
  ~Simulation_SimulationDetails_Range() override;
  explicit PROTOBUF_CONSTEXPR Simulation_SimulationDetails_Range(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Simulation_SimulationDetails_Range(const Simulation_SimulationDetails_Range& from);
  Simulation_SimulationDetails_Range(Simulation_SimulationDetails_Range&& from) noexcept
    : Simulation_SimulationDetails_Range() {
    *this = ::std::move(from);
  }

  inline Simulation_SimulationDetails_Range& operator=(const Simulation_SimulationDetails_Range& from) {
    CopyFrom(from);
    return *this;
  }
  inline Simulation_SimulationDetails_Range& operator=(Simulation_SimulationDetails_Range&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Simulation_SimulationDetails_Range& default_instance() {
    return *internal_default_instance();
  }
  static inline const Simulation_SimulationDetails_Range* internal_default_instance() {
    return reinterpret_cast<const Simulation_SimulationDetails_Range*>(
               &_Simulation_SimulationDetails_Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Simulation_SimulationDetails_Range& a, Simulation_SimulationDetails_Range& b) {
    a.Swap(&b);
  }
  inline void Swap(Simulation_SimulationDetails_Range* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Simulation_SimulationDetails_Range* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Simulation_SimulationDetails_Range* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Simulation_SimulationDetails_Range>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Simulation_SimulationDetails_Range& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Simulation_SimulationDetails_Range& from) {
    Simulation_SimulationDetails_Range::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Simulation_SimulationDetails_Range* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.Simulation.SimulationDetails.Range";
  }
  protected:
  explicit Simulation_SimulationDetails_Range(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
    kBinsFieldNumber = 3,
  };
  // optional double min = 1;
  bool has_min() const;
  private:
  bool _internal_has_min() const;
  public:
  void clear_min();
  double min() const;
  void set_min(double value);
  private:
  double _internal_min() const;
  void _internal_set_min(double value);
  public:

  // optional double max = 2;
  bool has_max() const;
  private:
  bool _internal_has_max() const;
  public:
  void clear_max();
  double max() const;
  void set_max(double value);
  private:
  double _internal_max() const;
  void _internal_set_max(double value);
  public:

  // optional uint32 bins = 3;
  bool has_bins() const;
  private:
  bool _internal_has_bins() const;
  public:
  void clear_bins();
  uint32_t bins() const;
  void set_bins(uint32_t value);
  private:
  uint32_t _internal_bins() const;
  void _internal_set_bins(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:simulation.Simulation.SimulationDetails.Range)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    double min_;
    double max_;
    uint32_t bins_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// -------------------------------------------------------------------

class Simulation_SimulationDetails_Layer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.Simulation.SimulationDetails.Layer) */ {
 public:
  inline Simulation_SimulationDetails_Layer() : Simulation_SimulationDetails_Layer(nullptr) {}
  ~Simulation_SimulationDetails_Layer() override;
  explicit PROTOBUF_CONSTEXPR Simulation_SimulationDetails_Layer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Simulation_SimulationDetails_Layer(const Simulation_SimulationDetails_Layer& from);
  Simulation_SimulationDetails_Layer(Simulation_SimulationDetails_Layer&& from) noexcept
    : Simulation_SimulationDetails_Layer() {
    *this = ::std::move(from);
  }

  inline Simulation_SimulationDetails_Layer& operator=(const Simulation_SimulationDetails_Layer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Simulation_SimulationDetails_Layer& operator=(Simulation_SimulationDetails_Layer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Simulation_SimulationDetails_Layer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Simulation_SimulationDetails_Layer* internal_default_instance() {
    return reinterpret_cast<const Simulation_SimulationDetails_Layer*>(
               &_Simulation_SimulationDetails_Layer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Simulation_SimulationDetails_Layer& a, Simulation_SimulationDetails_Layer& b) {
    a.Swap(&b);
  }
  inline void Swap(Simulation_SimulationDetails_Layer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Simulation_SimulationDetails_Layer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Simulation_SimulationDetails_Layer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Simulation_SimulationDetails_Layer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Simulation_SimulationDetails_Layer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Simulation_SimulationDetails_Layer& from) {
    Simulation_SimulationDetails_Layer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Simulation_SimulationDetails_Layer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.Simulation.SimulationDetails.Layer";
  }
  protected:
  explicit Simulation_SimulationDetails_Layer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFieldNumber = 1,
    kHeightFieldNumber = 2,
    kMuAFieldNumber = 3,
    kMuSFieldNumber = 4,
    kGFieldNumber = 5,
  };
  // optional double n = 1;
  bool has_n() const;
  private:
  bool _internal_has_n() const;
  public:
  void clear_n();
  double n() const;
  void set_n(double value);
  private:
  double _internal_n() const;
  void _internal_set_n(double value);
  public:

  // optional double height = 2;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  double height() const;
  void set_height(double value);
  private:
  double _internal_height() const;
  void _internal_set_height(double value);
  public:

  // optional double mu_a = 3;
  bool has_mu_a() const;
  private:
  bool _internal_has_mu_a() const;
  public:
  void clear_mu_a();
  double mu_a() const;
  void set_mu_a(double value);
  private:
  double _internal_mu_a() const;
  void _internal_set_mu_a(double value);
  public:

  // optional double mu_s = 4;
  bool has_mu_s() const;
  private:
  bool _internal_has_mu_s() const;
  public:
  void clear_mu_s();
  double mu_s() const;
  void set_mu_s(double value);
  private:
  double _internal_mu_s() const;
  void _internal_set_mu_s(double value);
  public:

  // optional double g = 5;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  double g() const;
  void set_g(double value);
  private:
  double _internal_g() const;
  void _internal_set_g(double value);
  public:

  // @@protoc_insertion_point(class_scope:simulation.Simulation.SimulationDetails.Layer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    double n_;
    double height_;
    double mu_a_;
    double mu_s_;
    double g_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// -------------------------------------------------------------------

class Simulation_SimulationDetails final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.Simulation.SimulationDetails) */ {
 public:
  inline Simulation_SimulationDetails() : Simulation_SimulationDetails(nullptr) {}
  ~Simulation_SimulationDetails() override;
  explicit PROTOBUF_CONSTEXPR Simulation_SimulationDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Simulation_SimulationDetails(const Simulation_SimulationDetails& from);
  Simulation_SimulationDetails(Simulation_SimulationDetails&& from) noexcept
    : Simulation_SimulationDetails() {
    *this = ::std::move(from);
  }

  inline Simulation_SimulationDetails& operator=(const Simulation_SimulationDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline Simulation_SimulationDetails& operator=(Simulation_SimulationDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Simulation_SimulationDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const Simulation_SimulationDetails* internal_default_instance() {
    return reinterpret_cast<const Simulation_SimulationDetails*>(
               &_Simulation_SimulationDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Simulation_SimulationDetails& a, Simulation_SimulationDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(Simulation_SimulationDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Simulation_SimulationDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Simulation_SimulationDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Simulation_SimulationDetails>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Simulation_SimulationDetails& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Simulation_SimulationDetails& from) {
    Simulation_SimulationDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Simulation_SimulationDetails* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.Simulation.SimulationDetails";
  }
  protected:
  explicit Simulation_SimulationDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Simulation_SimulationDetails_Range Range;
  typedef Simulation_SimulationDetails_Layer Layer;

  // accessors -------------------------------------------------------

  enum : int {
    kLayersFieldNumber = 4,
    kRadialExtentFieldNumber = 1,
    kHeightExtentFieldNumber = 2,
    kTimeStampFieldNumber = 3,
    kPhotonsLaunchedFieldNumber = 5,
  };
  // repeated .simulation.Simulation.SimulationDetails.Layer layers = 4;
  int layers_size() const;
  private:
  int _internal_layers_size() const;
  public:
  void clear_layers();
  ::simulation::Simulation_SimulationDetails_Layer* mutable_layers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation_SimulationDetails_Layer >*
      mutable_layers();
  private:
  const ::simulation::Simulation_SimulationDetails_Layer& _internal_layers(int index) const;
  ::simulation::Simulation_SimulationDetails_Layer* _internal_add_layers();
  public:
  const ::simulation::Simulation_SimulationDetails_Layer& layers(int index) const;
  ::simulation::Simulation_SimulationDetails_Layer* add_layers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation_SimulationDetails_Layer >&
      layers() const;

  // optional .simulation.Simulation.SimulationDetails.Range radialExtent = 1;
  bool has_radialextent() const;
  private:
  bool _internal_has_radialextent() const;
  public:
  void clear_radialextent();
  const ::simulation::Simulation_SimulationDetails_Range& radialextent() const;
  PROTOBUF_NODISCARD ::simulation::Simulation_SimulationDetails_Range* release_radialextent();
  ::simulation::Simulation_SimulationDetails_Range* mutable_radialextent();
  void set_allocated_radialextent(::simulation::Simulation_SimulationDetails_Range* radialextent);
  private:
  const ::simulation::Simulation_SimulationDetails_Range& _internal_radialextent() const;
  ::simulation::Simulation_SimulationDetails_Range* _internal_mutable_radialextent();
  public:
  void unsafe_arena_set_allocated_radialextent(
      ::simulation::Simulation_SimulationDetails_Range* radialextent);
  ::simulation::Simulation_SimulationDetails_Range* unsafe_arena_release_radialextent();

  // optional .simulation.Simulation.SimulationDetails.Range heightExtent = 2;
  bool has_heightextent() const;
  private:
  bool _internal_has_heightextent() const;
  public:
  void clear_heightextent();
  const ::simulation::Simulation_SimulationDetails_Range& heightextent() const;
  PROTOBUF_NODISCARD ::simulation::Simulation_SimulationDetails_Range* release_heightextent();
  ::simulation::Simulation_SimulationDetails_Range* mutable_heightextent();
  void set_allocated_heightextent(::simulation::Simulation_SimulationDetails_Range* heightextent);
  private:
  const ::simulation::Simulation_SimulationDetails_Range& _internal_heightextent() const;
  ::simulation::Simulation_SimulationDetails_Range* _internal_mutable_heightextent();
  public:
  void unsafe_arena_set_allocated_heightextent(
      ::simulation::Simulation_SimulationDetails_Range* heightextent);
  ::simulation::Simulation_SimulationDetails_Range* unsafe_arena_release_heightextent();

  // optional .google.protobuf.Timestamp timeStamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_timestamp() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_timestamp();

  // optional uint64 photonsLaunched = 5;
  bool has_photonslaunched() const;
  private:
  bool _internal_has_photonslaunched() const;
  public:
  void clear_photonslaunched();
  uint64_t photonslaunched() const;
  void set_photonslaunched(uint64_t value);
  private:
  uint64_t _internal_photonslaunched() const;
  void _internal_set_photonslaunched(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:simulation.Simulation.SimulationDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation_SimulationDetails_Layer > layers_;
    ::simulation::Simulation_SimulationDetails_Range* radialextent_;
    ::simulation::Simulation_SimulationDetails_Range* heightextent_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_;
    uint64_t photonslaunched_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// -------------------------------------------------------------------

class Simulation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.Simulation) */ {
 public:
  inline Simulation() : Simulation(nullptr) {}
  ~Simulation() override;
  explicit PROTOBUF_CONSTEXPR Simulation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Simulation(const Simulation& from);
  Simulation(Simulation&& from) noexcept
    : Simulation() {
    *this = ::std::move(from);
  }

  inline Simulation& operator=(const Simulation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Simulation& operator=(Simulation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Simulation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Simulation* internal_default_instance() {
    return reinterpret_cast<const Simulation*>(
               &_Simulation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Simulation& a, Simulation& b) {
    a.Swap(&b);
  }
  inline void Swap(Simulation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Simulation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Simulation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Simulation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Simulation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Simulation& from) {
    Simulation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Simulation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.Simulation";
  }
  protected:
  explicit Simulation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Simulation_SimulationDetails SimulationDetails;

  // accessors -------------------------------------------------------

  enum : int {
    kReflectanceFieldNumber = 2,
    kAbsorptionFieldNumber = 3,
    kDetailsFieldNumber = 1,
  };
  // repeated double reflectance = 2 [packed = true];
  int reflectance_size() const;
  private:
  int _internal_reflectance_size() const;
  public:
  void clear_reflectance();
  private:
  double _internal_reflectance(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_reflectance() const;
  void _internal_add_reflectance(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_reflectance();
  public:
  double reflectance(int index) const;
  void set_reflectance(int index, double value);
  void add_reflectance(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      reflectance() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_reflectance();

  // repeated double absorption = 3 [packed = true];
  int absorption_size() const;
  private:
  int _internal_absorption_size() const;
  public:
  void clear_absorption();
  private:
  double _internal_absorption(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_absorption() const;
  void _internal_add_absorption(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_absorption();
  public:
  double absorption(int index) const;
  void set_absorption(int index, double value);
  void add_absorption(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      absorption() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_absorption();

  // optional .simulation.Simulation.SimulationDetails details = 1;
  bool has_details() const;
  private:
  bool _internal_has_details() const;
  public:
  void clear_details();
  const ::simulation::Simulation_SimulationDetails& details() const;
  PROTOBUF_NODISCARD ::simulation::Simulation_SimulationDetails* release_details();
  ::simulation::Simulation_SimulationDetails* mutable_details();
  void set_allocated_details(::simulation::Simulation_SimulationDetails* details);
  private:
  const ::simulation::Simulation_SimulationDetails& _internal_details() const;
  ::simulation::Simulation_SimulationDetails* _internal_mutable_details();
  public:
  void unsafe_arena_set_allocated_details(
      ::simulation::Simulation_SimulationDetails* details);
  ::simulation::Simulation_SimulationDetails* unsafe_arena_release_details();

  // @@protoc_insertion_point(class_scope:simulation.Simulation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > reflectance_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > absorption_;
    ::simulation::Simulation_SimulationDetails* details_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// -------------------------------------------------------------------

class ParameterSimulation_Layer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.ParameterSimulation.Layer) */ {
 public:
  inline ParameterSimulation_Layer() : ParameterSimulation_Layer(nullptr) {}
  ~ParameterSimulation_Layer() override;
  explicit PROTOBUF_CONSTEXPR ParameterSimulation_Layer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterSimulation_Layer(const ParameterSimulation_Layer& from);
  ParameterSimulation_Layer(ParameterSimulation_Layer&& from) noexcept
    : ParameterSimulation_Layer() {
    *this = ::std::move(from);
  }

  inline ParameterSimulation_Layer& operator=(const ParameterSimulation_Layer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterSimulation_Layer& operator=(ParameterSimulation_Layer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterSimulation_Layer& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterSimulation_Layer* internal_default_instance() {
    return reinterpret_cast<const ParameterSimulation_Layer*>(
               &_ParameterSimulation_Layer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ParameterSimulation_Layer& a, ParameterSimulation_Layer& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterSimulation_Layer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterSimulation_Layer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParameterSimulation_Layer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ParameterSimulation_Layer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ParameterSimulation_Layer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ParameterSimulation_Layer& from) {
    ParameterSimulation_Layer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterSimulation_Layer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.ParameterSimulation.Layer";
  }
  protected:
  explicit ParameterSimulation_Layer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFieldNumber = 1,
    kHeightFieldNumber = 2,
    kGFieldNumber = 3,
    kMuAFieldNumber = 4,
    kMuSFieldNumber = 5,
    kAFieldNumber = 6,
    kBFieldNumber = 7,
    kCBloodFieldNumber = 8,
    kFOxyFieldNumber = 9,
    kFWaterFieldNumber = 10,
    kFLipidFieldNumber = 11,
  };
  // optional double n = 1;
  bool has_n() const;
  private:
  bool _internal_has_n() const;
  public:
  void clear_n();
  double n() const;
  void set_n(double value);
  private:
  double _internal_n() const;
  void _internal_set_n(double value);
  public:

  // optional double height = 2;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  double height() const;
  void set_height(double value);
  private:
  double _internal_height() const;
  void _internal_set_height(double value);
  public:

  // optional double g = 3;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  double g() const;
  void set_g(double value);
  private:
  double _internal_g() const;
  void _internal_set_g(double value);
  public:

  // optional double mu_a = 4;
  bool has_mu_a() const;
  private:
  bool _internal_has_mu_a() const;
  public:
  void clear_mu_a();
  double mu_a() const;
  void set_mu_a(double value);
  private:
  double _internal_mu_a() const;
  void _internal_set_mu_a(double value);
  public:

  // optional double mu_s = 5;
  bool has_mu_s() const;
  private:
  bool _internal_has_mu_s() const;
  public:
  void clear_mu_s();
  double mu_s() const;
  void set_mu_s(double value);
  private:
  double _internal_mu_s() const;
  void _internal_set_mu_s(double value);
  public:

  // optional double a = 6;
  bool has_a() const;
  private:
  bool _internal_has_a() const;
  public:
  void clear_a();
  double a() const;
  void set_a(double value);
  private:
  double _internal_a() const;
  void _internal_set_a(double value);
  public:

  // optional double b = 7;
  bool has_b() const;
  private:
  bool _internal_has_b() const;
  public:
  void clear_b();
  double b() const;
  void set_b(double value);
  private:
  double _internal_b() const;
  void _internal_set_b(double value);
  public:

  // optional double cBlood = 8;
  bool has_cblood() const;
  private:
  bool _internal_has_cblood() const;
  public:
  void clear_cblood();
  double cblood() const;
  void set_cblood(double value);
  private:
  double _internal_cblood() const;
  void _internal_set_cblood(double value);
  public:

  // optional double fOxy = 9;
  bool has_foxy() const;
  private:
  bool _internal_has_foxy() const;
  public:
  void clear_foxy();
  double foxy() const;
  void set_foxy(double value);
  private:
  double _internal_foxy() const;
  void _internal_set_foxy(double value);
  public:

  // optional double fWater = 10;
  bool has_fwater() const;
  private:
  bool _internal_has_fwater() const;
  public:
  void clear_fwater();
  double fwater() const;
  void set_fwater(double value);
  private:
  double _internal_fwater() const;
  void _internal_set_fwater(double value);
  public:

  // optional double fLipid = 11;
  bool has_flipid() const;
  private:
  bool _internal_has_flipid() const;
  public:
  void clear_flipid();
  double flipid() const;
  void set_flipid(double value);
  private:
  double _internal_flipid() const;
  void _internal_set_flipid(double value);
  public:

  // @@protoc_insertion_point(class_scope:simulation.ParameterSimulation.Layer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    double n_;
    double height_;
    double g_;
    double mu_a_;
    double mu_s_;
    double a_;
    double b_;
    double cblood_;
    double foxy_;
    double fwater_;
    double flipid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// -------------------------------------------------------------------

class ParameterSimulation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:simulation.ParameterSimulation) */ {
 public:
  inline ParameterSimulation() : ParameterSimulation(nullptr) {}
  ~ParameterSimulation() override;
  explicit PROTOBUF_CONSTEXPR ParameterSimulation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterSimulation(const ParameterSimulation& from);
  ParameterSimulation(ParameterSimulation&& from) noexcept
    : ParameterSimulation() {
    *this = ::std::move(from);
  }

  inline ParameterSimulation& operator=(const ParameterSimulation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterSimulation& operator=(ParameterSimulation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterSimulation& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParameterSimulation* internal_default_instance() {
    return reinterpret_cast<const ParameterSimulation*>(
               &_ParameterSimulation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ParameterSimulation& a, ParameterSimulation& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterSimulation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterSimulation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParameterSimulation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ParameterSimulation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ParameterSimulation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ParameterSimulation& from) {
    ParameterSimulation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterSimulation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "simulation.ParameterSimulation";
  }
  protected:
  explicit ParameterSimulation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParameterSimulation_Layer Layer;

  // accessors -------------------------------------------------------

  enum : int {
    kSimulationsFieldNumber = 1,
    kLayersFieldNumber = 2,
    kWavelengthsFieldNumber = 3,
  };
  // repeated .simulation.Simulation simulations = 1;
  int simulations_size() const;
  private:
  int _internal_simulations_size() const;
  public:
  void clear_simulations();
  ::simulation::Simulation* mutable_simulations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation >*
      mutable_simulations();
  private:
  const ::simulation::Simulation& _internal_simulations(int index) const;
  ::simulation::Simulation* _internal_add_simulations();
  public:
  const ::simulation::Simulation& simulations(int index) const;
  ::simulation::Simulation* add_simulations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation >&
      simulations() const;

  // repeated .simulation.ParameterSimulation.Layer layers = 2;
  int layers_size() const;
  private:
  int _internal_layers_size() const;
  public:
  void clear_layers();
  ::simulation::ParameterSimulation_Layer* mutable_layers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::ParameterSimulation_Layer >*
      mutable_layers();
  private:
  const ::simulation::ParameterSimulation_Layer& _internal_layers(int index) const;
  ::simulation::ParameterSimulation_Layer* _internal_add_layers();
  public:
  const ::simulation::ParameterSimulation_Layer& layers(int index) const;
  ::simulation::ParameterSimulation_Layer* add_layers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::ParameterSimulation_Layer >&
      layers() const;

  // repeated double wavelengths = 3;
  int wavelengths_size() const;
  private:
  int _internal_wavelengths_size() const;
  public:
  void clear_wavelengths();
  private:
  double _internal_wavelengths(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_wavelengths() const;
  void _internal_add_wavelengths(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_wavelengths();
  public:
  double wavelengths(int index) const;
  void set_wavelengths(int index, double value);
  void add_wavelengths(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      wavelengths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_wavelengths();

  // @@protoc_insertion_point(class_scope:simulation.ParameterSimulation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation > simulations_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::ParameterSimulation_Layer > layers_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > wavelengths_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_simulation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Simulation_SimulationDetails_Range

// optional double min = 1;
inline bool Simulation_SimulationDetails_Range::_internal_has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Range::has_min() const {
  return _internal_has_min();
}
inline void Simulation_SimulationDetails_Range::clear_min() {
  _impl_.min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Simulation_SimulationDetails_Range::_internal_min() const {
  return _impl_.min_;
}
inline double Simulation_SimulationDetails_Range::min() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Range.min)
  return _internal_min();
}
inline void Simulation_SimulationDetails_Range::_internal_set_min(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.min_ = value;
}
inline void Simulation_SimulationDetails_Range::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Range.min)
}

// optional double max = 2;
inline bool Simulation_SimulationDetails_Range::_internal_has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Range::has_max() const {
  return _internal_has_max();
}
inline void Simulation_SimulationDetails_Range::clear_max() {
  _impl_.max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Simulation_SimulationDetails_Range::_internal_max() const {
  return _impl_.max_;
}
inline double Simulation_SimulationDetails_Range::max() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Range.max)
  return _internal_max();
}
inline void Simulation_SimulationDetails_Range::_internal_set_max(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.max_ = value;
}
inline void Simulation_SimulationDetails_Range::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Range.max)
}

// optional uint32 bins = 3;
inline bool Simulation_SimulationDetails_Range::_internal_has_bins() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Range::has_bins() const {
  return _internal_has_bins();
}
inline void Simulation_SimulationDetails_Range::clear_bins() {
  _impl_.bins_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t Simulation_SimulationDetails_Range::_internal_bins() const {
  return _impl_.bins_;
}
inline uint32_t Simulation_SimulationDetails_Range::bins() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Range.bins)
  return _internal_bins();
}
inline void Simulation_SimulationDetails_Range::_internal_set_bins(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.bins_ = value;
}
inline void Simulation_SimulationDetails_Range::set_bins(uint32_t value) {
  _internal_set_bins(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Range.bins)
}

// -------------------------------------------------------------------

// Simulation_SimulationDetails_Layer

// optional double n = 1;
inline bool Simulation_SimulationDetails_Layer::_internal_has_n() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Layer::has_n() const {
  return _internal_has_n();
}
inline void Simulation_SimulationDetails_Layer::clear_n() {
  _impl_.n_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Simulation_SimulationDetails_Layer::_internal_n() const {
  return _impl_.n_;
}
inline double Simulation_SimulationDetails_Layer::n() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Layer.n)
  return _internal_n();
}
inline void Simulation_SimulationDetails_Layer::_internal_set_n(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.n_ = value;
}
inline void Simulation_SimulationDetails_Layer::set_n(double value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Layer.n)
}

// optional double height = 2;
inline bool Simulation_SimulationDetails_Layer::_internal_has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Layer::has_height() const {
  return _internal_has_height();
}
inline void Simulation_SimulationDetails_Layer::clear_height() {
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Simulation_SimulationDetails_Layer::_internal_height() const {
  return _impl_.height_;
}
inline double Simulation_SimulationDetails_Layer::height() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Layer.height)
  return _internal_height();
}
inline void Simulation_SimulationDetails_Layer::_internal_set_height(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.height_ = value;
}
inline void Simulation_SimulationDetails_Layer::set_height(double value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Layer.height)
}

// optional double mu_a = 3;
inline bool Simulation_SimulationDetails_Layer::_internal_has_mu_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Layer::has_mu_a() const {
  return _internal_has_mu_a();
}
inline void Simulation_SimulationDetails_Layer::clear_mu_a() {
  _impl_.mu_a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Simulation_SimulationDetails_Layer::_internal_mu_a() const {
  return _impl_.mu_a_;
}
inline double Simulation_SimulationDetails_Layer::mu_a() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Layer.mu_a)
  return _internal_mu_a();
}
inline void Simulation_SimulationDetails_Layer::_internal_set_mu_a(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.mu_a_ = value;
}
inline void Simulation_SimulationDetails_Layer::set_mu_a(double value) {
  _internal_set_mu_a(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Layer.mu_a)
}

// optional double mu_s = 4;
inline bool Simulation_SimulationDetails_Layer::_internal_has_mu_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Layer::has_mu_s() const {
  return _internal_has_mu_s();
}
inline void Simulation_SimulationDetails_Layer::clear_mu_s() {
  _impl_.mu_s_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Simulation_SimulationDetails_Layer::_internal_mu_s() const {
  return _impl_.mu_s_;
}
inline double Simulation_SimulationDetails_Layer::mu_s() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Layer.mu_s)
  return _internal_mu_s();
}
inline void Simulation_SimulationDetails_Layer::_internal_set_mu_s(double value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.mu_s_ = value;
}
inline void Simulation_SimulationDetails_Layer::set_mu_s(double value) {
  _internal_set_mu_s(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Layer.mu_s)
}

// optional double g = 5;
inline bool Simulation_SimulationDetails_Layer::_internal_has_g() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails_Layer::has_g() const {
  return _internal_has_g();
}
inline void Simulation_SimulationDetails_Layer::clear_g() {
  _impl_.g_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double Simulation_SimulationDetails_Layer::_internal_g() const {
  return _impl_.g_;
}
inline double Simulation_SimulationDetails_Layer::g() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.Layer.g)
  return _internal_g();
}
inline void Simulation_SimulationDetails_Layer::_internal_set_g(double value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.g_ = value;
}
inline void Simulation_SimulationDetails_Layer::set_g(double value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.Layer.g)
}

// -------------------------------------------------------------------

// Simulation_SimulationDetails

// optional .simulation.Simulation.SimulationDetails.Range radialExtent = 1;
inline bool Simulation_SimulationDetails::_internal_has_radialextent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.radialextent_ != nullptr);
  return value;
}
inline bool Simulation_SimulationDetails::has_radialextent() const {
  return _internal_has_radialextent();
}
inline void Simulation_SimulationDetails::clear_radialextent() {
  if (_impl_.radialextent_ != nullptr) _impl_.radialextent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::simulation::Simulation_SimulationDetails_Range& Simulation_SimulationDetails::_internal_radialextent() const {
  const ::simulation::Simulation_SimulationDetails_Range* p = _impl_.radialextent_;
  return p != nullptr ? *p : reinterpret_cast<const ::simulation::Simulation_SimulationDetails_Range&>(
      ::simulation::_Simulation_SimulationDetails_Range_default_instance_);
}
inline const ::simulation::Simulation_SimulationDetails_Range& Simulation_SimulationDetails::radialextent() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.radialExtent)
  return _internal_radialextent();
}
inline void Simulation_SimulationDetails::unsafe_arena_set_allocated_radialextent(
    ::simulation::Simulation_SimulationDetails_Range* radialextent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.radialextent_);
  }
  _impl_.radialextent_ = radialextent;
  if (radialextent) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:simulation.Simulation.SimulationDetails.radialExtent)
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::release_radialextent() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::simulation::Simulation_SimulationDetails_Range* temp = _impl_.radialextent_;
  _impl_.radialextent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::unsafe_arena_release_radialextent() {
  // @@protoc_insertion_point(field_release:simulation.Simulation.SimulationDetails.radialExtent)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::simulation::Simulation_SimulationDetails_Range* temp = _impl_.radialextent_;
  _impl_.radialextent_ = nullptr;
  return temp;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::_internal_mutable_radialextent() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.radialextent_ == nullptr) {
    auto* p = CreateMaybeMessage<::simulation::Simulation_SimulationDetails_Range>(GetArenaForAllocation());
    _impl_.radialextent_ = p;
  }
  return _impl_.radialextent_;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::mutable_radialextent() {
  ::simulation::Simulation_SimulationDetails_Range* _msg = _internal_mutable_radialextent();
  // @@protoc_insertion_point(field_mutable:simulation.Simulation.SimulationDetails.radialExtent)
  return _msg;
}
inline void Simulation_SimulationDetails::set_allocated_radialextent(::simulation::Simulation_SimulationDetails_Range* radialextent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.radialextent_;
  }
  if (radialextent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(radialextent);
    if (message_arena != submessage_arena) {
      radialextent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, radialextent, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.radialextent_ = radialextent;
  // @@protoc_insertion_point(field_set_allocated:simulation.Simulation.SimulationDetails.radialExtent)
}

// optional .simulation.Simulation.SimulationDetails.Range heightExtent = 2;
inline bool Simulation_SimulationDetails::_internal_has_heightextent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heightextent_ != nullptr);
  return value;
}
inline bool Simulation_SimulationDetails::has_heightextent() const {
  return _internal_has_heightextent();
}
inline void Simulation_SimulationDetails::clear_heightextent() {
  if (_impl_.heightextent_ != nullptr) _impl_.heightextent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::simulation::Simulation_SimulationDetails_Range& Simulation_SimulationDetails::_internal_heightextent() const {
  const ::simulation::Simulation_SimulationDetails_Range* p = _impl_.heightextent_;
  return p != nullptr ? *p : reinterpret_cast<const ::simulation::Simulation_SimulationDetails_Range&>(
      ::simulation::_Simulation_SimulationDetails_Range_default_instance_);
}
inline const ::simulation::Simulation_SimulationDetails_Range& Simulation_SimulationDetails::heightextent() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.heightExtent)
  return _internal_heightextent();
}
inline void Simulation_SimulationDetails::unsafe_arena_set_allocated_heightextent(
    ::simulation::Simulation_SimulationDetails_Range* heightextent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.heightextent_);
  }
  _impl_.heightextent_ = heightextent;
  if (heightextent) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:simulation.Simulation.SimulationDetails.heightExtent)
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::release_heightextent() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::simulation::Simulation_SimulationDetails_Range* temp = _impl_.heightextent_;
  _impl_.heightextent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::unsafe_arena_release_heightextent() {
  // @@protoc_insertion_point(field_release:simulation.Simulation.SimulationDetails.heightExtent)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::simulation::Simulation_SimulationDetails_Range* temp = _impl_.heightextent_;
  _impl_.heightextent_ = nullptr;
  return temp;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::_internal_mutable_heightextent() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.heightextent_ == nullptr) {
    auto* p = CreateMaybeMessage<::simulation::Simulation_SimulationDetails_Range>(GetArenaForAllocation());
    _impl_.heightextent_ = p;
  }
  return _impl_.heightextent_;
}
inline ::simulation::Simulation_SimulationDetails_Range* Simulation_SimulationDetails::mutable_heightextent() {
  ::simulation::Simulation_SimulationDetails_Range* _msg = _internal_mutable_heightextent();
  // @@protoc_insertion_point(field_mutable:simulation.Simulation.SimulationDetails.heightExtent)
  return _msg;
}
inline void Simulation_SimulationDetails::set_allocated_heightextent(::simulation::Simulation_SimulationDetails_Range* heightextent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.heightextent_;
  }
  if (heightextent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(heightextent);
    if (message_arena != submessage_arena) {
      heightextent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heightextent, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.heightextent_ = heightextent;
  // @@protoc_insertion_point(field_set_allocated:simulation.Simulation.SimulationDetails.heightExtent)
}

// optional .google.protobuf.Timestamp timeStamp = 3;
inline bool Simulation_SimulationDetails::_internal_has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline bool Simulation_SimulationDetails::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Simulation_SimulationDetails::_internal_timestamp() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Simulation_SimulationDetails::timestamp() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.timeStamp)
  return _internal_timestamp();
}
inline void Simulation_SimulationDetails::unsafe_arena_set_allocated_timestamp(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = timestamp;
  if (timestamp) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:simulation.Simulation.SimulationDetails.timeStamp)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Simulation_SimulationDetails::release_timestamp() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Simulation_SimulationDetails::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:simulation.Simulation.SimulationDetails.timeStamp)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Simulation_SimulationDetails::_internal_mutable_timestamp() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.timestamp_ = p;
  }
  return _impl_.timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Simulation_SimulationDetails::mutable_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:simulation.Simulation.SimulationDetails.timeStamp)
  return _msg;
}
inline void Simulation_SimulationDetails::set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp));
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:simulation.Simulation.SimulationDetails.timeStamp)
}

// repeated .simulation.Simulation.SimulationDetails.Layer layers = 4;
inline int Simulation_SimulationDetails::_internal_layers_size() const {
  return _impl_.layers_.size();
}
inline int Simulation_SimulationDetails::layers_size() const {
  return _internal_layers_size();
}
inline void Simulation_SimulationDetails::clear_layers() {
  _impl_.layers_.Clear();
}
inline ::simulation::Simulation_SimulationDetails_Layer* Simulation_SimulationDetails::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:simulation.Simulation.SimulationDetails.layers)
  return _impl_.layers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation_SimulationDetails_Layer >*
Simulation_SimulationDetails::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:simulation.Simulation.SimulationDetails.layers)
  return &_impl_.layers_;
}
inline const ::simulation::Simulation_SimulationDetails_Layer& Simulation_SimulationDetails::_internal_layers(int index) const {
  return _impl_.layers_.Get(index);
}
inline const ::simulation::Simulation_SimulationDetails_Layer& Simulation_SimulationDetails::layers(int index) const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.layers)
  return _internal_layers(index);
}
inline ::simulation::Simulation_SimulationDetails_Layer* Simulation_SimulationDetails::_internal_add_layers() {
  return _impl_.layers_.Add();
}
inline ::simulation::Simulation_SimulationDetails_Layer* Simulation_SimulationDetails::add_layers() {
  ::simulation::Simulation_SimulationDetails_Layer* _add = _internal_add_layers();
  // @@protoc_insertion_point(field_add:simulation.Simulation.SimulationDetails.layers)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation_SimulationDetails_Layer >&
Simulation_SimulationDetails::layers() const {
  // @@protoc_insertion_point(field_list:simulation.Simulation.SimulationDetails.layers)
  return _impl_.layers_;
}

// optional uint64 photonsLaunched = 5;
inline bool Simulation_SimulationDetails::_internal_has_photonslaunched() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Simulation_SimulationDetails::has_photonslaunched() const {
  return _internal_has_photonslaunched();
}
inline void Simulation_SimulationDetails::clear_photonslaunched() {
  _impl_.photonslaunched_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t Simulation_SimulationDetails::_internal_photonslaunched() const {
  return _impl_.photonslaunched_;
}
inline uint64_t Simulation_SimulationDetails::photonslaunched() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.SimulationDetails.photonsLaunched)
  return _internal_photonslaunched();
}
inline void Simulation_SimulationDetails::_internal_set_photonslaunched(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.photonslaunched_ = value;
}
inline void Simulation_SimulationDetails::set_photonslaunched(uint64_t value) {
  _internal_set_photonslaunched(value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.SimulationDetails.photonsLaunched)
}

// -------------------------------------------------------------------

// Simulation

// optional .simulation.Simulation.SimulationDetails details = 1;
inline bool Simulation::_internal_has_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.details_ != nullptr);
  return value;
}
inline bool Simulation::has_details() const {
  return _internal_has_details();
}
inline void Simulation::clear_details() {
  if (_impl_.details_ != nullptr) _impl_.details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::simulation::Simulation_SimulationDetails& Simulation::_internal_details() const {
  const ::simulation::Simulation_SimulationDetails* p = _impl_.details_;
  return p != nullptr ? *p : reinterpret_cast<const ::simulation::Simulation_SimulationDetails&>(
      ::simulation::_Simulation_SimulationDetails_default_instance_);
}
inline const ::simulation::Simulation_SimulationDetails& Simulation::details() const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.details)
  return _internal_details();
}
inline void Simulation::unsafe_arena_set_allocated_details(
    ::simulation::Simulation_SimulationDetails* details) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.details_);
  }
  _impl_.details_ = details;
  if (details) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:simulation.Simulation.details)
}
inline ::simulation::Simulation_SimulationDetails* Simulation::release_details() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::simulation::Simulation_SimulationDetails* temp = _impl_.details_;
  _impl_.details_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::simulation::Simulation_SimulationDetails* Simulation::unsafe_arena_release_details() {
  // @@protoc_insertion_point(field_release:simulation.Simulation.details)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::simulation::Simulation_SimulationDetails* temp = _impl_.details_;
  _impl_.details_ = nullptr;
  return temp;
}
inline ::simulation::Simulation_SimulationDetails* Simulation::_internal_mutable_details() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.details_ == nullptr) {
    auto* p = CreateMaybeMessage<::simulation::Simulation_SimulationDetails>(GetArenaForAllocation());
    _impl_.details_ = p;
  }
  return _impl_.details_;
}
inline ::simulation::Simulation_SimulationDetails* Simulation::mutable_details() {
  ::simulation::Simulation_SimulationDetails* _msg = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:simulation.Simulation.details)
  return _msg;
}
inline void Simulation::set_allocated_details(::simulation::Simulation_SimulationDetails* details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.details_;
  }
  if (details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(details);
    if (message_arena != submessage_arena) {
      details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.details_ = details;
  // @@protoc_insertion_point(field_set_allocated:simulation.Simulation.details)
}

// repeated double reflectance = 2 [packed = true];
inline int Simulation::_internal_reflectance_size() const {
  return _impl_.reflectance_.size();
}
inline int Simulation::reflectance_size() const {
  return _internal_reflectance_size();
}
inline void Simulation::clear_reflectance() {
  _impl_.reflectance_.Clear();
}
inline double Simulation::_internal_reflectance(int index) const {
  return _impl_.reflectance_.Get(index);
}
inline double Simulation::reflectance(int index) const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.reflectance)
  return _internal_reflectance(index);
}
inline void Simulation::set_reflectance(int index, double value) {
  _impl_.reflectance_.Set(index, value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.reflectance)
}
inline void Simulation::_internal_add_reflectance(double value) {
  _impl_.reflectance_.Add(value);
}
inline void Simulation::add_reflectance(double value) {
  _internal_add_reflectance(value);
  // @@protoc_insertion_point(field_add:simulation.Simulation.reflectance)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Simulation::_internal_reflectance() const {
  return _impl_.reflectance_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Simulation::reflectance() const {
  // @@protoc_insertion_point(field_list:simulation.Simulation.reflectance)
  return _internal_reflectance();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Simulation::_internal_mutable_reflectance() {
  return &_impl_.reflectance_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Simulation::mutable_reflectance() {
  // @@protoc_insertion_point(field_mutable_list:simulation.Simulation.reflectance)
  return _internal_mutable_reflectance();
}

// repeated double absorption = 3 [packed = true];
inline int Simulation::_internal_absorption_size() const {
  return _impl_.absorption_.size();
}
inline int Simulation::absorption_size() const {
  return _internal_absorption_size();
}
inline void Simulation::clear_absorption() {
  _impl_.absorption_.Clear();
}
inline double Simulation::_internal_absorption(int index) const {
  return _impl_.absorption_.Get(index);
}
inline double Simulation::absorption(int index) const {
  // @@protoc_insertion_point(field_get:simulation.Simulation.absorption)
  return _internal_absorption(index);
}
inline void Simulation::set_absorption(int index, double value) {
  _impl_.absorption_.Set(index, value);
  // @@protoc_insertion_point(field_set:simulation.Simulation.absorption)
}
inline void Simulation::_internal_add_absorption(double value) {
  _impl_.absorption_.Add(value);
}
inline void Simulation::add_absorption(double value) {
  _internal_add_absorption(value);
  // @@protoc_insertion_point(field_add:simulation.Simulation.absorption)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Simulation::_internal_absorption() const {
  return _impl_.absorption_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Simulation::absorption() const {
  // @@protoc_insertion_point(field_list:simulation.Simulation.absorption)
  return _internal_absorption();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Simulation::_internal_mutable_absorption() {
  return &_impl_.absorption_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Simulation::mutable_absorption() {
  // @@protoc_insertion_point(field_mutable_list:simulation.Simulation.absorption)
  return _internal_mutable_absorption();
}

// -------------------------------------------------------------------

// ParameterSimulation_Layer

// optional double n = 1;
inline bool ParameterSimulation_Layer::_internal_has_n() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_n() const {
  return _internal_has_n();
}
inline void ParameterSimulation_Layer::clear_n() {
  _impl_.n_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double ParameterSimulation_Layer::_internal_n() const {
  return _impl_.n_;
}
inline double ParameterSimulation_Layer::n() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.n)
  return _internal_n();
}
inline void ParameterSimulation_Layer::_internal_set_n(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.n_ = value;
}
inline void ParameterSimulation_Layer::set_n(double value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.n)
}

// optional double height = 2;
inline bool ParameterSimulation_Layer::_internal_has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_height() const {
  return _internal_has_height();
}
inline void ParameterSimulation_Layer::clear_height() {
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ParameterSimulation_Layer::_internal_height() const {
  return _impl_.height_;
}
inline double ParameterSimulation_Layer::height() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.height)
  return _internal_height();
}
inline void ParameterSimulation_Layer::_internal_set_height(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.height_ = value;
}
inline void ParameterSimulation_Layer::set_height(double value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.height)
}

// optional double g = 3;
inline bool ParameterSimulation_Layer::_internal_has_g() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_g() const {
  return _internal_has_g();
}
inline void ParameterSimulation_Layer::clear_g() {
  _impl_.g_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double ParameterSimulation_Layer::_internal_g() const {
  return _impl_.g_;
}
inline double ParameterSimulation_Layer::g() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.g)
  return _internal_g();
}
inline void ParameterSimulation_Layer::_internal_set_g(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.g_ = value;
}
inline void ParameterSimulation_Layer::set_g(double value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.g)
}

// optional double mu_a = 4;
inline bool ParameterSimulation_Layer::_internal_has_mu_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_mu_a() const {
  return _internal_has_mu_a();
}
inline void ParameterSimulation_Layer::clear_mu_a() {
  _impl_.mu_a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double ParameterSimulation_Layer::_internal_mu_a() const {
  return _impl_.mu_a_;
}
inline double ParameterSimulation_Layer::mu_a() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.mu_a)
  return _internal_mu_a();
}
inline void ParameterSimulation_Layer::_internal_set_mu_a(double value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.mu_a_ = value;
}
inline void ParameterSimulation_Layer::set_mu_a(double value) {
  _internal_set_mu_a(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.mu_a)
}

// optional double mu_s = 5;
inline bool ParameterSimulation_Layer::_internal_has_mu_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_mu_s() const {
  return _internal_has_mu_s();
}
inline void ParameterSimulation_Layer::clear_mu_s() {
  _impl_.mu_s_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double ParameterSimulation_Layer::_internal_mu_s() const {
  return _impl_.mu_s_;
}
inline double ParameterSimulation_Layer::mu_s() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.mu_s)
  return _internal_mu_s();
}
inline void ParameterSimulation_Layer::_internal_set_mu_s(double value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.mu_s_ = value;
}
inline void ParameterSimulation_Layer::set_mu_s(double value) {
  _internal_set_mu_s(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.mu_s)
}

// optional double a = 6;
inline bool ParameterSimulation_Layer::_internal_has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_a() const {
  return _internal_has_a();
}
inline void ParameterSimulation_Layer::clear_a() {
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double ParameterSimulation_Layer::_internal_a() const {
  return _impl_.a_;
}
inline double ParameterSimulation_Layer::a() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.a)
  return _internal_a();
}
inline void ParameterSimulation_Layer::_internal_set_a(double value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.a_ = value;
}
inline void ParameterSimulation_Layer::set_a(double value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.a)
}

// optional double b = 7;
inline bool ParameterSimulation_Layer::_internal_has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_b() const {
  return _internal_has_b();
}
inline void ParameterSimulation_Layer::clear_b() {
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double ParameterSimulation_Layer::_internal_b() const {
  return _impl_.b_;
}
inline double ParameterSimulation_Layer::b() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.b)
  return _internal_b();
}
inline void ParameterSimulation_Layer::_internal_set_b(double value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.b_ = value;
}
inline void ParameterSimulation_Layer::set_b(double value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.b)
}

// optional double cBlood = 8;
inline bool ParameterSimulation_Layer::_internal_has_cblood() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_cblood() const {
  return _internal_has_cblood();
}
inline void ParameterSimulation_Layer::clear_cblood() {
  _impl_.cblood_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double ParameterSimulation_Layer::_internal_cblood() const {
  return _impl_.cblood_;
}
inline double ParameterSimulation_Layer::cblood() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.cBlood)
  return _internal_cblood();
}
inline void ParameterSimulation_Layer::_internal_set_cblood(double value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.cblood_ = value;
}
inline void ParameterSimulation_Layer::set_cblood(double value) {
  _internal_set_cblood(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.cBlood)
}

// optional double fOxy = 9;
inline bool ParameterSimulation_Layer::_internal_has_foxy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_foxy() const {
  return _internal_has_foxy();
}
inline void ParameterSimulation_Layer::clear_foxy() {
  _impl_.foxy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline double ParameterSimulation_Layer::_internal_foxy() const {
  return _impl_.foxy_;
}
inline double ParameterSimulation_Layer::foxy() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.fOxy)
  return _internal_foxy();
}
inline void ParameterSimulation_Layer::_internal_set_foxy(double value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.foxy_ = value;
}
inline void ParameterSimulation_Layer::set_foxy(double value) {
  _internal_set_foxy(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.fOxy)
}

// optional double fWater = 10;
inline bool ParameterSimulation_Layer::_internal_has_fwater() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_fwater() const {
  return _internal_has_fwater();
}
inline void ParameterSimulation_Layer::clear_fwater() {
  _impl_.fwater_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline double ParameterSimulation_Layer::_internal_fwater() const {
  return _impl_.fwater_;
}
inline double ParameterSimulation_Layer::fwater() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.fWater)
  return _internal_fwater();
}
inline void ParameterSimulation_Layer::_internal_set_fwater(double value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.fwater_ = value;
}
inline void ParameterSimulation_Layer::set_fwater(double value) {
  _internal_set_fwater(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.fWater)
}

// optional double fLipid = 11;
inline bool ParameterSimulation_Layer::_internal_has_flipid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ParameterSimulation_Layer::has_flipid() const {
  return _internal_has_flipid();
}
inline void ParameterSimulation_Layer::clear_flipid() {
  _impl_.flipid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline double ParameterSimulation_Layer::_internal_flipid() const {
  return _impl_.flipid_;
}
inline double ParameterSimulation_Layer::flipid() const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.Layer.fLipid)
  return _internal_flipid();
}
inline void ParameterSimulation_Layer::_internal_set_flipid(double value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.flipid_ = value;
}
inline void ParameterSimulation_Layer::set_flipid(double value) {
  _internal_set_flipid(value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.Layer.fLipid)
}

// -------------------------------------------------------------------

// ParameterSimulation

// repeated .simulation.Simulation simulations = 1;
inline int ParameterSimulation::_internal_simulations_size() const {
  return _impl_.simulations_.size();
}
inline int ParameterSimulation::simulations_size() const {
  return _internal_simulations_size();
}
inline void ParameterSimulation::clear_simulations() {
  _impl_.simulations_.Clear();
}
inline ::simulation::Simulation* ParameterSimulation::mutable_simulations(int index) {
  // @@protoc_insertion_point(field_mutable:simulation.ParameterSimulation.simulations)
  return _impl_.simulations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation >*
ParameterSimulation::mutable_simulations() {
  // @@protoc_insertion_point(field_mutable_list:simulation.ParameterSimulation.simulations)
  return &_impl_.simulations_;
}
inline const ::simulation::Simulation& ParameterSimulation::_internal_simulations(int index) const {
  return _impl_.simulations_.Get(index);
}
inline const ::simulation::Simulation& ParameterSimulation::simulations(int index) const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.simulations)
  return _internal_simulations(index);
}
inline ::simulation::Simulation* ParameterSimulation::_internal_add_simulations() {
  return _impl_.simulations_.Add();
}
inline ::simulation::Simulation* ParameterSimulation::add_simulations() {
  ::simulation::Simulation* _add = _internal_add_simulations();
  // @@protoc_insertion_point(field_add:simulation.ParameterSimulation.simulations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::Simulation >&
ParameterSimulation::simulations() const {
  // @@protoc_insertion_point(field_list:simulation.ParameterSimulation.simulations)
  return _impl_.simulations_;
}

// repeated .simulation.ParameterSimulation.Layer layers = 2;
inline int ParameterSimulation::_internal_layers_size() const {
  return _impl_.layers_.size();
}
inline int ParameterSimulation::layers_size() const {
  return _internal_layers_size();
}
inline void ParameterSimulation::clear_layers() {
  _impl_.layers_.Clear();
}
inline ::simulation::ParameterSimulation_Layer* ParameterSimulation::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:simulation.ParameterSimulation.layers)
  return _impl_.layers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::ParameterSimulation_Layer >*
ParameterSimulation::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:simulation.ParameterSimulation.layers)
  return &_impl_.layers_;
}
inline const ::simulation::ParameterSimulation_Layer& ParameterSimulation::_internal_layers(int index) const {
  return _impl_.layers_.Get(index);
}
inline const ::simulation::ParameterSimulation_Layer& ParameterSimulation::layers(int index) const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.layers)
  return _internal_layers(index);
}
inline ::simulation::ParameterSimulation_Layer* ParameterSimulation::_internal_add_layers() {
  return _impl_.layers_.Add();
}
inline ::simulation::ParameterSimulation_Layer* ParameterSimulation::add_layers() {
  ::simulation::ParameterSimulation_Layer* _add = _internal_add_layers();
  // @@protoc_insertion_point(field_add:simulation.ParameterSimulation.layers)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::simulation::ParameterSimulation_Layer >&
ParameterSimulation::layers() const {
  // @@protoc_insertion_point(field_list:simulation.ParameterSimulation.layers)
  return _impl_.layers_;
}

// repeated double wavelengths = 3;
inline int ParameterSimulation::_internal_wavelengths_size() const {
  return _impl_.wavelengths_.size();
}
inline int ParameterSimulation::wavelengths_size() const {
  return _internal_wavelengths_size();
}
inline void ParameterSimulation::clear_wavelengths() {
  _impl_.wavelengths_.Clear();
}
inline double ParameterSimulation::_internal_wavelengths(int index) const {
  return _impl_.wavelengths_.Get(index);
}
inline double ParameterSimulation::wavelengths(int index) const {
  // @@protoc_insertion_point(field_get:simulation.ParameterSimulation.wavelengths)
  return _internal_wavelengths(index);
}
inline void ParameterSimulation::set_wavelengths(int index, double value) {
  _impl_.wavelengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:simulation.ParameterSimulation.wavelengths)
}
inline void ParameterSimulation::_internal_add_wavelengths(double value) {
  _impl_.wavelengths_.Add(value);
}
inline void ParameterSimulation::add_wavelengths(double value) {
  _internal_add_wavelengths(value);
  // @@protoc_insertion_point(field_add:simulation.ParameterSimulation.wavelengths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterSimulation::_internal_wavelengths() const {
  return _impl_.wavelengths_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterSimulation::wavelengths() const {
  // @@protoc_insertion_point(field_list:simulation.ParameterSimulation.wavelengths)
  return _internal_wavelengths();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterSimulation::_internal_mutable_wavelengths() {
  return &_impl_.wavelengths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterSimulation::mutable_wavelengths() {
  // @@protoc_insertion_point(field_mutable_list:simulation.ParameterSimulation.wavelengths)
  return _internal_mutable_wavelengths();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace simulation

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_simulation_2eproto
