// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulation.proto

#include "simulation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace simulation {
PROTOBUF_CONSTEXPR Simulation_SimulationDetails_Range::Simulation_SimulationDetails_Range(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.min_)*/0
  , /*decltype(_impl_.max_)*/0
  , /*decltype(_impl_.bins_)*/0} {}
struct Simulation_SimulationDetails_RangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Simulation_SimulationDetails_RangeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Simulation_SimulationDetails_RangeDefaultTypeInternal() {}
  union {
    Simulation_SimulationDetails_Range _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Simulation_SimulationDetails_RangeDefaultTypeInternal _Simulation_SimulationDetails_Range_default_instance_;
PROTOBUF_CONSTEXPR Simulation_SimulationDetails_Layer::Simulation_SimulationDetails_Layer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.n_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_.mu_a_)*/0
  , /*decltype(_impl_.mu_s_)*/0
  , /*decltype(_impl_.g_)*/0} {}
struct Simulation_SimulationDetails_LayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Simulation_SimulationDetails_LayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Simulation_SimulationDetails_LayerDefaultTypeInternal() {}
  union {
    Simulation_SimulationDetails_Layer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Simulation_SimulationDetails_LayerDefaultTypeInternal _Simulation_SimulationDetails_Layer_default_instance_;
PROTOBUF_CONSTEXPR Simulation_SimulationDetails::Simulation_SimulationDetails(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.layers_)*/{}
  , /*decltype(_impl_.parameterrangename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.radialextent_)*/nullptr
  , /*decltype(_impl_.heightextent_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr} {}
struct Simulation_SimulationDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Simulation_SimulationDetailsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Simulation_SimulationDetailsDefaultTypeInternal() {}
  union {
    Simulation_SimulationDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Simulation_SimulationDetailsDefaultTypeInternal _Simulation_SimulationDetails_default_instance_;
PROTOBUF_CONSTEXPR Simulation::Simulation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reflectance_)*/{}
  , /*decltype(_impl_.absorption_)*/{}
  , /*decltype(_impl_.details_)*/nullptr} {}
struct SimulationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimulationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimulationDefaultTypeInternal() {}
  union {
    Simulation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimulationDefaultTypeInternal _Simulation_default_instance_;
}  // namespace simulation
static ::_pb::Metadata file_level_metadata_simulation_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_simulation_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_simulation_2eproto = nullptr;

const uint32_t TableStruct_simulation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Range, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Range, _impl_.min_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Range, _impl_.max_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Range, _impl_.bins_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_.mu_a_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_.mu_s_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails_Layer, _impl_.g_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_.radialextent_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_.heightextent_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_.layers_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation_SimulationDetails, _impl_.parameterrangename_),
  1,
  2,
  3,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation, _impl_.details_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation, _impl_.reflectance_),
  PROTOBUF_FIELD_OFFSET(::simulation::Simulation, _impl_.absorption_),
  0,
  ~0u,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::simulation::Simulation_SimulationDetails_Range)},
  { 12, 23, -1, sizeof(::simulation::Simulation_SimulationDetails_Layer)},
  { 28, 39, -1, sizeof(::simulation::Simulation_SimulationDetails)},
  { 44, 53, -1, sizeof(::simulation::Simulation)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::simulation::_Simulation_SimulationDetails_Range_default_instance_._instance,
  &::simulation::_Simulation_SimulationDetails_Layer_default_instance_._instance,
  &::simulation::_Simulation_SimulationDetails_default_instance_._instance,
  &::simulation::_Simulation_default_instance_._instance,
};

const char descriptor_table_protodef_simulation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020simulation.proto\022\nsimulation\032\037google/p"
  "rotobuf/timestamp.proto\"\241\004\n\nSimulation\0229"
  "\n\007details\030\001 \001(\0132(.simulation.Simulation."
  "SimulationDetails\022\027\n\013reflectance\030\002 \003(\001B\002"
  "\020\001\022\026\n\nabsorption\030\003 \003(\001B\002\020\001\032\246\003\n\021Simulatio"
  "nDetails\022D\n\014radialExtent\030\001 \001(\0132..simulat"
  "ion.Simulation.SimulationDetails.Range\022D"
  "\n\014heightExtent\030\002 \001(\0132..simulation.Simula"
  "tion.SimulationDetails.Range\022-\n\ttimeStam"
  "p\030\003 \001(\0132\032.google.protobuf.Timestamp\022>\n\006l"
  "ayers\030\004 \003(\0132..simulation.Simulation.Simu"
  "lationDetails.Layer\022\032\n\022parameterRangeNam"
  "e\030\005 \001(\t\032/\n\005Range\022\013\n\003min\030\001 \001(\001\022\013\n\003max\030\002 \001"
  "(\001\022\014\n\004bins\030\003 \001(\001\032I\n\005Layer\022\t\n\001n\030\001 \001(\001\022\016\n\006"
  "height\030\002 \001(\001\022\014\n\004mu_a\030\003 \001(\001\022\014\n\004mu_s\030\004 \001(\001"
  "\022\t\n\001g\030\005 \001(\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_simulation_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_simulation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_simulation_2eproto = {
    false, false, 611, descriptor_table_protodef_simulation_2eproto,
    "simulation.proto",
    &descriptor_table_simulation_2eproto_once, descriptor_table_simulation_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_simulation_2eproto::offsets,
    file_level_metadata_simulation_2eproto, file_level_enum_descriptors_simulation_2eproto,
    file_level_service_descriptors_simulation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_simulation_2eproto_getter() {
  return &descriptor_table_simulation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_simulation_2eproto(&descriptor_table_simulation_2eproto);
namespace simulation {

// ===================================================================

class Simulation_SimulationDetails_Range::_Internal {
 public:
  using HasBits = decltype(std::declval<Simulation_SimulationDetails_Range>()._impl_._has_bits_);
  static void set_has_min(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bins(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Simulation_SimulationDetails_Range::Simulation_SimulationDetails_Range(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:simulation.Simulation.SimulationDetails.Range)
}
Simulation_SimulationDetails_Range::Simulation_SimulationDetails_Range(const Simulation_SimulationDetails_Range& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Simulation_SimulationDetails_Range* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.min_){}
    , decltype(_impl_.max_){}
    , decltype(_impl_.bins_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.min_, &from._impl_.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.bins_) -
    reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.bins_));
  // @@protoc_insertion_point(copy_constructor:simulation.Simulation.SimulationDetails.Range)
}

inline void Simulation_SimulationDetails_Range::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.min_){0}
    , decltype(_impl_.max_){0}
    , decltype(_impl_.bins_){0}
  };
}

Simulation_SimulationDetails_Range::~Simulation_SimulationDetails_Range() {
  // @@protoc_insertion_point(destructor:simulation.Simulation.SimulationDetails.Range)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Simulation_SimulationDetails_Range::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Simulation_SimulationDetails_Range::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Simulation_SimulationDetails_Range::Clear() {
// @@protoc_insertion_point(message_clear_start:simulation.Simulation.SimulationDetails.Range)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.min_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.bins_) -
        reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.bins_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Simulation_SimulationDetails_Range::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double min = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_min(&has_bits);
          _impl_.min_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double max = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_max(&has_bits);
          _impl_.max_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double bins = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_bins(&has_bits);
          _impl_.bins_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Simulation_SimulationDetails_Range::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:simulation.Simulation.SimulationDetails.Range)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double min = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_min(), target);
  }

  // optional double max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_max(), target);
  }

  // optional double bins = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_bins(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simulation.Simulation.SimulationDetails.Range)
  return target;
}

size_t Simulation_SimulationDetails_Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simulation.Simulation.SimulationDetails.Range)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double min = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double max = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double bins = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Simulation_SimulationDetails_Range::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Simulation_SimulationDetails_Range::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Simulation_SimulationDetails_Range::GetClassData() const { return &_class_data_; }


void Simulation_SimulationDetails_Range::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Simulation_SimulationDetails_Range*>(&to_msg);
  auto& from = static_cast<const Simulation_SimulationDetails_Range&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:simulation.Simulation.SimulationDetails.Range)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.max_ = from._impl_.max_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.bins_ = from._impl_.bins_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Simulation_SimulationDetails_Range::CopyFrom(const Simulation_SimulationDetails_Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simulation.Simulation.SimulationDetails.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simulation_SimulationDetails_Range::IsInitialized() const {
  return true;
}

void Simulation_SimulationDetails_Range::InternalSwap(Simulation_SimulationDetails_Range* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails_Range, _impl_.bins_)
      + sizeof(Simulation_SimulationDetails_Range::_impl_.bins_)
      - PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails_Range, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Simulation_SimulationDetails_Range::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_simulation_2eproto_getter, &descriptor_table_simulation_2eproto_once,
      file_level_metadata_simulation_2eproto[0]);
}

// ===================================================================

class Simulation_SimulationDetails_Layer::_Internal {
 public:
  using HasBits = decltype(std::declval<Simulation_SimulationDetails_Layer>()._impl_._has_bits_);
  static void set_has_n(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mu_a(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_mu_s(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_g(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Simulation_SimulationDetails_Layer::Simulation_SimulationDetails_Layer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:simulation.Simulation.SimulationDetails.Layer)
}
Simulation_SimulationDetails_Layer::Simulation_SimulationDetails_Layer(const Simulation_SimulationDetails_Layer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Simulation_SimulationDetails_Layer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.n_){}
    , decltype(_impl_.height_){}
    , decltype(_impl_.mu_a_){}
    , decltype(_impl_.mu_s_){}
    , decltype(_impl_.g_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.n_, &from._impl_.n_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.g_) -
    reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.g_));
  // @@protoc_insertion_point(copy_constructor:simulation.Simulation.SimulationDetails.Layer)
}

inline void Simulation_SimulationDetails_Layer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.n_){0}
    , decltype(_impl_.height_){0}
    , decltype(_impl_.mu_a_){0}
    , decltype(_impl_.mu_s_){0}
    , decltype(_impl_.g_){0}
  };
}

Simulation_SimulationDetails_Layer::~Simulation_SimulationDetails_Layer() {
  // @@protoc_insertion_point(destructor:simulation.Simulation.SimulationDetails.Layer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Simulation_SimulationDetails_Layer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Simulation_SimulationDetails_Layer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Simulation_SimulationDetails_Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:simulation.Simulation.SimulationDetails.Layer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.n_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.g_) -
        reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.g_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Simulation_SimulationDetails_Layer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double n = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_n(&has_bits);
          _impl_.n_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_height(&has_bits);
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double mu_a = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_mu_a(&has_bits);
          _impl_.mu_a_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double mu_s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_mu_s(&has_bits);
          _impl_.mu_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double g = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_g(&has_bits);
          _impl_.g_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Simulation_SimulationDetails_Layer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:simulation.Simulation.SimulationDetails.Layer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double n = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_n(), target);
  }

  // optional double height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_height(), target);
  }

  // optional double mu_a = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_mu_a(), target);
  }

  // optional double mu_s = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_mu_s(), target);
  }

  // optional double g = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_g(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simulation.Simulation.SimulationDetails.Layer)
  return target;
}

size_t Simulation_SimulationDetails_Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simulation.Simulation.SimulationDetails.Layer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional double n = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double height = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double mu_a = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double mu_s = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double g = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Simulation_SimulationDetails_Layer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Simulation_SimulationDetails_Layer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Simulation_SimulationDetails_Layer::GetClassData() const { return &_class_data_; }


void Simulation_SimulationDetails_Layer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Simulation_SimulationDetails_Layer*>(&to_msg);
  auto& from = static_cast<const Simulation_SimulationDetails_Layer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:simulation.Simulation.SimulationDetails.Layer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.n_ = from._impl_.n_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mu_a_ = from._impl_.mu_a_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mu_s_ = from._impl_.mu_s_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.g_ = from._impl_.g_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Simulation_SimulationDetails_Layer::CopyFrom(const Simulation_SimulationDetails_Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simulation.Simulation.SimulationDetails.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simulation_SimulationDetails_Layer::IsInitialized() const {
  return true;
}

void Simulation_SimulationDetails_Layer::InternalSwap(Simulation_SimulationDetails_Layer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails_Layer, _impl_.g_)
      + sizeof(Simulation_SimulationDetails_Layer::_impl_.g_)
      - PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails_Layer, _impl_.n_)>(
          reinterpret_cast<char*>(&_impl_.n_),
          reinterpret_cast<char*>(&other->_impl_.n_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Simulation_SimulationDetails_Layer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_simulation_2eproto_getter, &descriptor_table_simulation_2eproto_once,
      file_level_metadata_simulation_2eproto[1]);
}

// ===================================================================

class Simulation_SimulationDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<Simulation_SimulationDetails>()._impl_._has_bits_);
  static const ::simulation::Simulation_SimulationDetails_Range& radialextent(const Simulation_SimulationDetails* msg);
  static void set_has_radialextent(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::simulation::Simulation_SimulationDetails_Range& heightextent(const Simulation_SimulationDetails* msg);
  static void set_has_heightextent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const Simulation_SimulationDetails* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_parameterrangename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::simulation::Simulation_SimulationDetails_Range&
Simulation_SimulationDetails::_Internal::radialextent(const Simulation_SimulationDetails* msg) {
  return *msg->_impl_.radialextent_;
}
const ::simulation::Simulation_SimulationDetails_Range&
Simulation_SimulationDetails::_Internal::heightextent(const Simulation_SimulationDetails* msg) {
  return *msg->_impl_.heightextent_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Simulation_SimulationDetails::_Internal::timestamp(const Simulation_SimulationDetails* msg) {
  return *msg->_impl_.timestamp_;
}
void Simulation_SimulationDetails::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
Simulation_SimulationDetails::Simulation_SimulationDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:simulation.Simulation.SimulationDetails)
}
Simulation_SimulationDetails::Simulation_SimulationDetails(const Simulation_SimulationDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Simulation_SimulationDetails* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layers_){from._impl_.layers_}
    , decltype(_impl_.parameterrangename_){}
    , decltype(_impl_.radialextent_){nullptr}
    , decltype(_impl_.heightextent_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parameterrangename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parameterrangename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parameterrangename()) {
    _this->_impl_.parameterrangename_.Set(from._internal_parameterrangename(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_radialextent()) {
    _this->_impl_.radialextent_ = new ::simulation::Simulation_SimulationDetails_Range(*from._impl_.radialextent_);
  }
  if (from._internal_has_heightextent()) {
    _this->_impl_.heightextent_ = new ::simulation::Simulation_SimulationDetails_Range(*from._impl_.heightextent_);
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.timestamp_);
  }
  // @@protoc_insertion_point(copy_constructor:simulation.Simulation.SimulationDetails)
}

inline void Simulation_SimulationDetails::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layers_){arena}
    , decltype(_impl_.parameterrangename_){}
    , decltype(_impl_.radialextent_){nullptr}
    , decltype(_impl_.heightextent_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
  };
  _impl_.parameterrangename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parameterrangename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Simulation_SimulationDetails::~Simulation_SimulationDetails() {
  // @@protoc_insertion_point(destructor:simulation.Simulation.SimulationDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Simulation_SimulationDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.layers_.~RepeatedPtrField();
  _impl_.parameterrangename_.Destroy();
  if (this != internal_default_instance()) delete _impl_.radialextent_;
  if (this != internal_default_instance()) delete _impl_.heightextent_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
}

void Simulation_SimulationDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Simulation_SimulationDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:simulation.Simulation.SimulationDetails)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.parameterrangename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.radialextent_ != nullptr);
      _impl_.radialextent_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.heightextent_ != nullptr);
      _impl_.heightextent_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Simulation_SimulationDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .simulation.Simulation.SimulationDetails.Range radialExtent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_radialextent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .simulation.Simulation.SimulationDetails.Range heightExtent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_heightextent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Timestamp timeStamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .simulation.Simulation.SimulationDetails.Layer layers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_layers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string parameterRangeName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_parameterrangename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "simulation.Simulation.SimulationDetails.parameterRangeName");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Simulation_SimulationDetails::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:simulation.Simulation.SimulationDetails)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .simulation.Simulation.SimulationDetails.Range radialExtent = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::radialextent(this),
        _Internal::radialextent(this).GetCachedSize(), target, stream);
  }

  // optional .simulation.Simulation.SimulationDetails.Range heightExtent = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::heightextent(this),
        _Internal::heightextent(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp timeStamp = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // repeated .simulation.Simulation.SimulationDetails.Layer layers = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layers_size()); i < n; i++) {
    const auto& repfield = this->_internal_layers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string parameterRangeName = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_parameterrangename().data(), static_cast<int>(this->_internal_parameterrangename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "simulation.Simulation.SimulationDetails.parameterRangeName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_parameterrangename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simulation.Simulation.SimulationDetails)
  return target;
}

size_t Simulation_SimulationDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simulation.Simulation.SimulationDetails)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .simulation.Simulation.SimulationDetails.Layer layers = 4;
  total_size += 1UL * this->_internal_layers_size();
  for (const auto& msg : this->_impl_.layers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string parameterRangeName = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_parameterrangename());
    }

    // optional .simulation.Simulation.SimulationDetails.Range radialExtent = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radialextent_);
    }

    // optional .simulation.Simulation.SimulationDetails.Range heightExtent = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.heightextent_);
    }

    // optional .google.protobuf.Timestamp timeStamp = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timestamp_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Simulation_SimulationDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Simulation_SimulationDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Simulation_SimulationDetails::GetClassData() const { return &_class_data_; }


void Simulation_SimulationDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Simulation_SimulationDetails*>(&to_msg);
  auto& from = static_cast<const Simulation_SimulationDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:simulation.Simulation.SimulationDetails)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.layers_.MergeFrom(from._impl_.layers_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_parameterrangename(from._internal_parameterrangename());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_radialextent()->::simulation::Simulation_SimulationDetails_Range::MergeFrom(
          from._internal_radialextent());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_heightextent()->::simulation::Simulation_SimulationDetails_Range::MergeFrom(
          from._internal_heightextent());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_timestamp());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Simulation_SimulationDetails::CopyFrom(const Simulation_SimulationDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simulation.Simulation.SimulationDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simulation_SimulationDetails::IsInitialized() const {
  return true;
}

void Simulation_SimulationDetails::InternalSwap(Simulation_SimulationDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.layers_.InternalSwap(&other->_impl_.layers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parameterrangename_, lhs_arena,
      &other->_impl_.parameterrangename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails, _impl_.timestamp_)
      + sizeof(Simulation_SimulationDetails::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Simulation_SimulationDetails, _impl_.radialextent_)>(
          reinterpret_cast<char*>(&_impl_.radialextent_),
          reinterpret_cast<char*>(&other->_impl_.radialextent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Simulation_SimulationDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_simulation_2eproto_getter, &descriptor_table_simulation_2eproto_once,
      file_level_metadata_simulation_2eproto[2]);
}

// ===================================================================

class Simulation::_Internal {
 public:
  using HasBits = decltype(std::declval<Simulation>()._impl_._has_bits_);
  static const ::simulation::Simulation_SimulationDetails& details(const Simulation* msg);
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::simulation::Simulation_SimulationDetails&
Simulation::_Internal::details(const Simulation* msg) {
  return *msg->_impl_.details_;
}
Simulation::Simulation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:simulation.Simulation)
}
Simulation::Simulation(const Simulation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Simulation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reflectance_){from._impl_.reflectance_}
    , decltype(_impl_.absorption_){from._impl_.absorption_}
    , decltype(_impl_.details_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_details()) {
    _this->_impl_.details_ = new ::simulation::Simulation_SimulationDetails(*from._impl_.details_);
  }
  // @@protoc_insertion_point(copy_constructor:simulation.Simulation)
}

inline void Simulation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reflectance_){arena}
    , decltype(_impl_.absorption_){arena}
    , decltype(_impl_.details_){nullptr}
  };
}

Simulation::~Simulation() {
  // @@protoc_insertion_point(destructor:simulation.Simulation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Simulation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reflectance_.~RepeatedField();
  _impl_.absorption_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.details_;
}

void Simulation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Simulation::Clear() {
// @@protoc_insertion_point(message_clear_start:simulation.Simulation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reflectance_.Clear();
  _impl_.absorption_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.details_ != nullptr);
    _impl_.details_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Simulation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .simulation.Simulation.SimulationDetails details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated double reflectance = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_reflectance(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 17) {
          _internal_add_reflectance(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated double absorption = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_absorption(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 25) {
          _internal_add_absorption(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Simulation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:simulation.Simulation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .simulation.Simulation.SimulationDetails details = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::details(this),
        _Internal::details(this).GetCachedSize(), target, stream);
  }

  // repeated double reflectance = 2 [packed = true];
  if (this->_internal_reflectance_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_reflectance(), target);
  }

  // repeated double absorption = 3 [packed = true];
  if (this->_internal_absorption_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_absorption(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simulation.Simulation)
  return target;
}

size_t Simulation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simulation.Simulation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double reflectance = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_reflectance_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated double absorption = 3 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_absorption_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // optional .simulation.Simulation.SimulationDetails details = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.details_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Simulation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Simulation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Simulation::GetClassData() const { return &_class_data_; }


void Simulation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Simulation*>(&to_msg);
  auto& from = static_cast<const Simulation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:simulation.Simulation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reflectance_.MergeFrom(from._impl_.reflectance_);
  _this->_impl_.absorption_.MergeFrom(from._impl_.absorption_);
  if (from._internal_has_details()) {
    _this->_internal_mutable_details()->::simulation::Simulation_SimulationDetails::MergeFrom(
        from._internal_details());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Simulation::CopyFrom(const Simulation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simulation.Simulation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simulation::IsInitialized() const {
  return true;
}

void Simulation::InternalSwap(Simulation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reflectance_.InternalSwap(&other->_impl_.reflectance_);
  _impl_.absorption_.InternalSwap(&other->_impl_.absorption_);
  swap(_impl_.details_, other->_impl_.details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Simulation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_simulation_2eproto_getter, &descriptor_table_simulation_2eproto_once,
      file_level_metadata_simulation_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace simulation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::simulation::Simulation_SimulationDetails_Range*
Arena::CreateMaybeMessage< ::simulation::Simulation_SimulationDetails_Range >(Arena* arena) {
  return Arena::CreateMessageInternal< ::simulation::Simulation_SimulationDetails_Range >(arena);
}
template<> PROTOBUF_NOINLINE ::simulation::Simulation_SimulationDetails_Layer*
Arena::CreateMaybeMessage< ::simulation::Simulation_SimulationDetails_Layer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::simulation::Simulation_SimulationDetails_Layer >(arena);
}
template<> PROTOBUF_NOINLINE ::simulation::Simulation_SimulationDetails*
Arena::CreateMaybeMessage< ::simulation::Simulation_SimulationDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::simulation::Simulation_SimulationDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::simulation::Simulation*
Arena::CreateMaybeMessage< ::simulation::Simulation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::simulation::Simulation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
